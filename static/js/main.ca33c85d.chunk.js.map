{"version":3,"sources":["components/Contacts/Contacts.js","components/Filter/Filter.js","components/Container/Container.js","components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Contacts","contacts","onDeleteContact","map","id","name","number","className","onClick","Filter","value","onChange","type","Container","children","Form","state","handelIncrementChange","e","currentTarget","setState","handelSubmit","preventDefault","props","onSubmit","reset","this","uuidv4","pattern","title","required","Component","App","contactsList","filter","event","onChangeContacts","some","contact","alert","split","string","charAt","toUpperCase","slice","join","deleteContact","contactId","prevState","changeFilter","getVisibleContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca33c85d.chunk.js","sourcesContent":["import './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"item\">\r\n        <p className=\"text\">{name}:</p>\r\n        <span>{number}</span>\r\n        <button className=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import './Filter.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className=\"text\">Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"сontainer\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Form.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handelIncrementChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handelSubmit} className=\"form\">\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handelIncrementChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Number</span>\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handelIncrementChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport Contacts from './components/Contacts';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport contactsList from './components/Contacts/contactsList.json';\n\nclass App extends Component {\n  state = {\n    contacts: contactsList,\n    filter: '',\n  };\n   componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('update');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  handelIncrementChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  onChangeContacts = ({ name, number }) => {\n    const { contacts } = this.state;\n    if (contacts.some(contact => contact.name === name)) {\n      alert(\n        `${name\n          .split(' ')\n          .map(string => string.charAt(0).toUpperCase() + string.slice(1))\n          .join(\n            ' ',\n          )} is already in contacts. Change contact's name or delete old.`,\n      );\n      return;\n    }\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.onChangeContacts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <Contacts\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}